From 645f8f9d7a2bd52ad0b0f5617487f826b110bae1 Mon Sep 17 00:00:00 2001
From: slitaz-cn <teasiu@163.com>
Date: Mon, 5 Apr 2021 13:28:29 +0800
Subject: [PATCH 1/2] set default 192.168.33.1 for all

Signed-off-by: slitaz-cn <teasiu@163.com>
---
 include/target.mk                             |   5 +-
 include/version.mk                            |   2 +-
 package/base-files/Makefile                   |   4 +-
 package/base-files/files/bin/AutoUpdate.sh    | 310 ++++++++++++++++++
 package/base-files/files/bin/config_generate  |  13 +-
 package/base-files/files/etc/banner           |   2 +-
 package/base-files/files/etc/passwd           |   2 +-
 package/base-files/files/etc/rc.local         |  14 +-
 package/base-files/files/etc/shadow           |   2 +-
 package/base-files/image-config.in            |   6 +-
 .../linux/files/sysctl-nf-conntrack.conf      |   2 +-
 .../config/firewall/files/firewall.config     |  39 +++
 .../services/dropbear/files/dropbear.config   |   1 +
 package/system/fstools/Makefile               |   1 +
 package/system/fstools/files/10-auto-mount    |  85 +++++
 scripts/download.pl                           |   1 +
 16 files changed, 470 insertions(+), 19 deletions(-)
 create mode 100644 package/base-files/files/bin/AutoUpdate.sh
 create mode 100644 package/system/fstools/files/10-auto-mount

diff --git a/include/target.mk b/include/target.mk
index 7b0e92fce8..5e8e181908 100644
--- a/include/target.mk
+++ b/include/target.mk
@@ -13,11 +13,12 @@ __target_inc=1
 DEVICE_TYPE?=router
 
 # Default packages - the really basic set
-DEFAULT_PACKAGES:=base-files libc libgcc busybox dropbear mtd uci opkg netifd fstools uclient-fetch logd urandom-seed urngd
+DEFAULT_PACKAGES:=base-files libc libgcc busybox dropbear mtd uci opkg bash wget curl block-mount fdisk lsblk bind-client \
+				netifd fstools uclient-fetch logd urandom-seed urngd
 # For nas targets
 DEFAULT_PACKAGES.nas:=block-mount fdisk lsblk mdadm
 # For router targets
-DEFAULT_PACKAGES.router:=dnsmasq iptables ip6tables ppp ppp-mod-pppoe firewall odhcpd-ipv6only odhcp6c kmod-ipt-offload
+DEFAULT_PACKAGES.router:=dnsmasq-full iptables ip6tables ppp ppp-mod-pppoe firewall odhcpd-ipv6only odhcp6c kmod-ipt-offload
 DEFAULT_PACKAGES.bootloader:=
 
 ifneq ($(DUMP),)
diff --git a/include/version.mk b/include/version.mk
index 7c2d92a833..1677464a3f 100644
--- a/include/version.mk
+++ b/include/version.mk
@@ -32,7 +32,7 @@ VERSION_CODE:=$(call qstrip,$(CONFIG_VERSION_CODE))
 VERSION_CODE:=$(if $(VERSION_CODE),$(VERSION_CODE),r11306-c4a6851c72)
 
 VERSION_REPO:=$(call qstrip,$(CONFIG_VERSION_REPO))
-VERSION_REPO:=$(if $(VERSION_REPO),$(VERSION_REPO),http://downloads.openwrt.org/releases/19.07.7)
+VERSION_REPO:=$(if $(VERSION_REPO),$(VERSION_REPO),https://mirrors.cloud.tencent.com/openwrt/releases/19.07.7)
 
 VERSION_DIST:=$(call qstrip,$(CONFIG_VERSION_DIST))
 VERSION_DIST:=$(if $(VERSION_DIST),$(VERSION_DIST),OpenWrt)
diff --git a/package/base-files/Makefile b/package/base-files/Makefile
index f2af97f7e6..dcf62a58f4 100644
--- a/package/base-files/Makefile
+++ b/package/base-files/Makefile
@@ -81,9 +81,9 @@ define ImageConfigOptions
 	echo 'pi_init_cmd=$(if $(CONFIG_TARGET_INIT_CMD),$(CONFIG_TARGET_INIT_CMD),"/sbin/init")' >>$(1)/lib/preinit/00_preinit.conf
 	echo 'pi_init_suppress_stderr="$(CONFIG_TARGET_INIT_SUPPRESS_STDERR)"' >>$(1)/lib/preinit/00_preinit.conf
 	echo 'pi_ifname=$(if $(CONFIG_TARGET_PREINIT_IFNAME),$(CONFIG_TARGET_PREINIT_IFNAME),"")' >>$(1)/lib/preinit/00_preinit.conf
-	echo 'pi_ip=$(if $(CONFIG_TARGET_PREINIT_IP),$(CONFIG_TARGET_PREINIT_IP),"192.168.1.1")' >>$(1)/lib/preinit/00_preinit.conf
+	echo 'pi_ip=$(if $(CONFIG_TARGET_PREINIT_IP),$(CONFIG_TARGET_PREINIT_IP),"192.168.33.1")' >>$(1)/lib/preinit/00_preinit.conf
 	echo 'pi_netmask=$(if $(CONFIG_TARGET_PREINIT_NETMASK),$(CONFIG_TARGET_PREINIT_NETMASK),"255.255.255.0")' >>$(1)/lib/preinit/00_preinit.conf
-	echo 'pi_broadcast=$(if $(CONFIG_TARGET_PREINIT_BROADCAST),$(CONFIG_TARGET_PREINIT_BROADCAST),"192.168.1.255")' >>$(1)/lib/preinit/00_preinit.conf
+	echo 'pi_broadcast=$(if $(CONFIG_TARGET_PREINIT_BROADCAST),$(CONFIG_TARGET_PREINIT_BROADCAST),"192.168.33.255")' >>$(1)/lib/preinit/00_preinit.conf
 	echo 'pi_preinit_net_messages="$(CONFIG_TARGET_PREINIT_SHOW_NETMSG)"' >>$(1)/lib/preinit/00_preinit.conf
 	echo 'pi_preinit_no_failsafe_netmsg="$(CONFIG_TARGET_PREINIT_SUPPRESS_FAILSAFE_NETMSG)"' >>$(1)/lib/preinit/00_preinit.conf
 	echo 'pi_preinit_no_failsafe="$(CONFIG_TARGET_PREINIT_DISABLE_FAILSAFE)"' >>$(1)/lib/preinit/00_preinit.conf
diff --git a/package/base-files/files/bin/AutoUpdate.sh b/package/base-files/files/bin/AutoUpdate.sh
new file mode 100644
index 0000000000..e2be38b461
--- /dev/null
+++ b/package/base-files/files/bin/AutoUpdate.sh
@@ -0,0 +1,310 @@
+#!/bin/bash
+# https://github.com/Hyy2001X/AutoBuild-Actions
+# AutoBuild Module by Hyy2001
+# AutoUpdate for Openwrt
+
+Version=V5.5
+
+Shell_Helper() {
+	echo -e "\n使用方法: bash /bin/AutoUpdate.sh [参数1] [参数2]"
+	echo -e "\n支持下列参数:\n"
+	echo "	-q	更新固件,不打印备份信息日志 [保留配置]"
+	echo "	-n	更新固件 [不保留配置]"
+	echo "	-f	强制更新固件,即跳过版本号验证,自动下载以及安装必要软件包 [保留配置]"
+	echo "	-u	适用于定时更新 LUCI 的参数 [保留配置]"
+	echo "	-c	[参数2:<Github 地址>] 更换 Github 检查更新以及固件下载地址"
+	echo "	-b	[参数2:<引导方式 UEFI/Legacy>] 指定 x86 设备下载使用 UEFI/Legacy 引导的固件 [危险]"
+	echo "	-l	列出所有信息"
+	echo "	-d	清除固件下载缓存"
+	echo -e "	-h	打印帮助信息\n"
+	exit
+}
+
+List_Info() {
+	echo -e "\n/overlay 可用:	${Overlay_Available}"
+	echo "/tmp 可用:	${TMP_Available}M"
+	echo "固件下载位置:	/tmp/Downloads"
+	echo "当前设备:	${CURRENT_Device}"
+	echo "默认设备:	${DEFAULT_Device}"
+	echo "当前固件版本:	${CURRENT_Version}"
+	echo "固件名称:	AutoBuild-${CURRENT_Device}-${CURRENT_Version}${Firmware_SFX}"
+	echo "Github 地址:	${Github}"
+	echo "解析 API 地址:	${Github_Tags}"
+	echo "固件下载地址:	${Github_Download}"
+	echo "作者/仓库:	${Author}"
+	if [[ ${DEFAULT_Device} == "x86_64" ]];then
+		echo "EFI 引导: 	${EFI_Boot}"
+		echo "固件压缩:	${Compressed_x86}"
+	fi
+	echo "固件格式:	${Firmware_SFX}"
+	exit
+}
+
+Install_Pkg() {
+	PKG_NAME=${1}
+	grep "${PKG_NAME}" /tmp/Package_list > /dev/null 2>&1
+	if [[ $? -ne 0 ]];then
+		if [[ "${Force_Update}" == "1" ]] || [[ "${AutoUpdate_Mode}" == "1" ]];then
+			Choose="Y"
+		else
+			TIME && read -p "未安装[${PKG_NAME}],是否执行安装?[Y/n]:" Choose
+		fi
+		if [[ "${Choose}" == Y ]] || [[ "${Choose}" == y ]];then
+			TIME && echo -e "开始安装[${PKG_NAME}],请耐心等待...\n"
+			opkg update > /dev/null 2>&1
+			opkg install ${PKG_NAME}
+			if [[ $? -ne 0 ]];then
+				TIME && echo "[${PKG_NAME}] 安装失败,请尝试手动安装!"
+				exit
+			else
+				TIME && echo "[${PKG_NAME}] 安装成功!"
+			fi
+		else
+			TIME && echo "用户已取消安装,即将退出更新脚本..."
+			sleep 2
+			exit
+		fi
+	fi
+}
+
+TIME() {
+	echo -ne "\n[$(date "+%H:%M:%S")] "
+}
+
+opkg list | awk '{print $1}' > /tmp/Package_list
+Input_Option="$1"
+Input_Other="$2"
+CURRENT_Version="$(awk 'NR==1' /etc/openwrt_info)"
+Github="$(awk 'NR==2' /etc/openwrt_info)"
+Github_Download="${Github}/releases/download/AutoUpdate"
+Author="${Github##*com/}"
+Github_Tags="https://api.github.com/repos/${Author}/releases/latest"
+DEFAULT_Device="$(awk 'NR==3' /etc/openwrt_info)"
+Firmware_Type="$(awk 'NR==4' /etc/openwrt_info)"
+TMP_Available="$(df -m | grep "/tmp" | awk '{print $4}' | awk 'NR==1' | awk -F. '{print $1}')"
+Overlay_Available="$(df -h | grep ":/overlay" | awk '{print $4}' | awk 'NR==1')"
+case ${DEFAULT_Device} in
+x86_64)
+	[[ -z ${Firmware_Type} ]] && Firmware_Type="img"
+	if [[ "${Firmware_Type}" == "img.gz" ]];then
+		Compressed_x86="1"
+	else
+		Compressed_x86="0"
+	fi
+	if [ -f /etc/openwrt_boot ];then
+		BOOT_Type="-$(cat /etc/openwrt_boot)"
+	else
+		if [ -d /sys/firmware/efi ];then
+			BOOT_Type="-UEFI"
+		else
+			BOOT_Type="-Legacy"
+		fi
+	fi
+	case "${BOOT_Type}" in
+	-Legacy)
+		EFI_Boot=0
+	;;
+	-UEFI)
+		EFI_Boot=1
+	;;
+	esac
+	Firmware_SFX="${BOOT_Type}.${Firmware_Type}"
+	Detail_SFX="${BOOT_Type}.detail"
+	CURRENT_Device="x86_64"
+	Space_Req=480
+;;
+*)
+	CURRENT_Device="$(jsonfilter -e '@.model.id' < /etc/board.json | tr ',' '_')"
+	Firmware_SFX=".${Firmware_Type}"
+	[[ -z ${Firmware_SFX} ]] && Firmware_SFX=".bin"
+	Detail_SFX=".detail"
+	Space_Req=0
+esac
+cd /etc
+clear && echo "Openwrt-AutoUpdate Script ${Version}"
+if [[ -z "${Input_Option}" ]];then
+	Upgrade_Options="-q" && TIME && echo "执行: 保留配置更新固件[静默模式]"
+else
+	case ${Input_Option} in
+	-n | -f | -u)
+		case ${Input_Option} in
+		-n)
+			TIME && echo "执行: 更新固件(不保留配置)"
+			Upgrade_Options="-n"
+		;;
+		-f)
+			Force_Update=1
+			Upgrade_Options="-q"
+			TIME && echo "执行: 强制更新固件(保留配置)"
+		;;
+		-u)
+			AutoUpdate_Mode=1
+			Upgrade_Options="-q"
+		;;
+		esac
+	;;
+	-c)
+		if [[ ! -z "${Input_Other}" ]];then
+			sed -i "s?${Github}?${Input_Other}?g" /etc/openwrt_info > /dev/null 2>&1
+			echo -e "\nGithub 地址已更换为: ${Input_Other}"
+			unset Input_Other
+		else
+			Shell_Helper
+		fi
+		exit
+	;;
+	-l | -L)
+		List_Info
+	;;
+	-d)
+		rm -f /tmp/Downloads/* /tmp/Github_Tags
+		TIME && echo "固件下载缓存清理完成!"
+		sleep 1
+		exit
+	;;
+	-h | -H | --help)
+		Shell_Helper
+	;;
+	-b)
+		[[ -z "${Input_Other}" ]] && Shell_Helper
+		case "${Input_Other}" in
+		UEFI | Legacy)
+			echo "${Input_Other}" > openwrt_boot
+			sed -i '/openwrt_boot/d' /etc/sysupgrade.conf
+			echo -e "\n/etc/openwrt_boot" >> /etc/sysupgrade.conf
+			TIME && echo "固件引导方式已指定为: ${Input_Other}!"
+		;;
+		*)
+			echo -e "\n错误的参数: [${Input_Other}],当前支持的选项: [UEFI/Legacy] !"
+		;;
+		esac
+		exit
+	;;
+	*)
+		echo -e "\nERROR INPUT: [$*]"
+		Shell_Helper
+	;;
+	esac
+fi
+if [[ ! "${Force_Update}" == "1" ]];then
+	grep "curl" /tmp/Package_list > /dev/null 2>&1
+	if [[ ! $? -ne 0 ]];then
+		Google_Check=$(curl -I -s --connect-timeout 3 google.com -w %{http_code} | tail -n1)
+		if [ ! "$Google_Check" == 301 ];then
+			TIME && echo "Google 连接失败,尝试使用 [FastGit] 镜像加速!"
+			PROXY_URL="https://download.fastgit.org"
+		fi
+	fi
+	if [[ "${TMP_Available}" -lt "${Space_Req}" ]];then
+		TIME && echo "/tmp 空间不足: [${Space_Req}M],无法执行更新!"
+		exit
+	fi
+fi
+Install_Pkg wget
+if [[ -z "${CURRENT_Version}" ]];then
+	TIME && echo "警告: 当前固件版本获取失败!"
+	CURRENT_Version="未知"
+fi
+if [[ -z "${CURRENT_Device}" ]];then
+	[[ "${Force_Update}" == "1" ]] && exit
+	TIME && echo "警告: 当前设备名称获取失败,使用预设名称[$DEFAULT_Device]"
+	CURRENT_Device="${DEFAULT_Device}"
+fi
+TIME && echo "正在检查版本更新..."
+wget -q ${Github_Tags} -O - > /tmp/Github_Tags
+if [[ ! "$?" == 0 ]];then
+	TIME && echo "检查更新失败,请稍后重试!"
+	exit
+fi
+TIME && echo "正在获取云端固件版本..."
+GET_Firmware=$(cat /tmp/Github_Tags | egrep -o "AutoBuild-${CURRENT_Device}-R[0-9].+-[0-9]+${Firmware_SFX}" | awk 'END {print}')
+GET_Version=$(echo ${GET_Firmware} | egrep -o "R[0-9].+-[0-9]+")
+if [[ -z "${GET_Firmware}" ]] || [[ -z "${GET_Version}" ]];then
+	TIME && echo "云端固件版本获取失败!"
+	exit
+fi
+Firmware_Info="$(echo ${GET_Firmware} | egrep -o "AutoBuild-${CURRENT_Device}-R[0-9].+-[0-9]+")"
+Firmware="${GET_Firmware}"
+Firmware_Detail="${Firmware_Info}${Detail_SFX}"
+let X=$(grep -n "${Firmware}" /tmp/Github_Tags | tail -1 | cut -d : -f 1)-4
+let Cloud_Firmware_Size=$(sed -n "${X}p" /tmp/Github_Tags | egrep -o "[0-9]+" | awk '{print ($1)/1048576}' | awk -F. '{print $1}')+1
+echo -e "\n固件作者: ${Author%/*}"
+echo "设备名称: ${CURRENT_Device}"
+echo "固件格式: ${Firmware_SFX}"
+echo -e "\n当前固件版本: ${CURRENT_Version}"
+echo "云端固件版本: ${GET_Version}"
+echo "当前可用空间: ${TMP_Available}M"
+echo "云端固件大小: ${Cloud_Firmware_Size}M"
+if [[ ! ${Force_Update} == 1 ]];then
+	if [[ "${TMP_Available}" -lt "${Cloud_Firmware_Size}" ]];then
+		TIME && echo "/tmp 空间不足: [${Cloud_Firmware_Size}M],无法执行更新!"
+		exit
+	fi
+	if [[ ${CURRENT_Version} == ${GET_Version} ]];then
+		[[ "${AutoUpdate_Mode}" == "1" ]] && exit
+		TIME && read -p "已是最新版本,是否强制更新固件?[Y/n]:" Choose
+		if [[ "${Choose}" == Y ]] || [[ "${Choose}" == y ]];then
+			TIME && echo "开始强制更新固件..."
+		else
+			TIME && echo "已取消强制更新,即将退出更新程序..."
+			sleep 2
+			exit
+		fi
+	fi
+fi
+if [ ! -z "${PROXY_URL}" ];then
+	Github_Download=${PROXY_URL}/${Author}/releases/download/AutoUpdate
+fi
+echo -e "\n云端固件名称: ${Firmware}"
+echo "固件下载地址: ${Github_Download}"
+echo "固件保存位置: /tmp/Downloads"
+[ ! -d "/tmp/Downloads" ] && mkdir -p /tmp/Downloads
+rm -f /tmp/Downloads/*
+TIME && echo "正在下载固件,请耐心等待..."
+cd /tmp/Downloads
+wget -q "${Github_Download}/${Firmware}" -O ${Firmware}
+if [[ ! "$?" == 0 ]];then
+	TIME && echo "固件下载失败,请检查网络后重试!"
+	exit
+fi
+TIME && echo "固件下载成功!"
+TIME && echo "正在获取云端固件MD5,请耐心等待..."
+wget -q ${Github_Download}/${Firmware_Detail} -O ${Firmware_Detail}
+if [[ ! "$?" == 0 ]];then
+	TIME && echo "MD5 获取失败,请检查网络后重试!"
+	exit
+fi
+GET_MD5=$(awk -F '[ :]' '/MD5/ {print $2;exit}' ${Firmware_Detail})
+CURRENT_MD5=$(md5sum ${Firmware} | cut -d ' ' -f1)
+echo -e "\n本地固件MD5:${CURRENT_MD5}"
+echo "云端固件MD5:${GET_MD5}"
+if [[ -z "${GET_MD5}" ]] || [[ -z "${CURRENT_MD5}" ]];then
+	TIME && echo "MD5 获取失败!"
+	exit
+fi
+if [[ ! "${GET_MD5}" == "${CURRENT_MD5}" ]];then
+	TIME && echo "MD5 对比失败,请检查网络后重试!"
+	exit
+else
+	TIME && echo "MD5 对比通过!"
+fi
+if [[ ${Compressed_x86} == 1 ]];then
+	TIME && echo "检测到固件为 [.gz] 压缩格式,开始解压固件..."
+	Install_Pkg gzip
+	gzip -dk ${Firmware} > /dev/null 2>&1
+	Firmware="${Firmware_Info}${BOOT_Type}.img"
+	if [ -f "${Firmware}" ];then
+		TIME && echo "固件解压成功,名称: ${Firmware}"
+	else
+		TIME && echo "固件解压失败!"
+		exit
+	fi
+fi
+TIME && echo -e "一切准备就绪,3s 后开始更新固件..."
+sleep 3
+TIME && echo "正在更新固件,期间请耐心等待..."
+sysupgrade ${Upgrade_Options} ${Firmware}
+if [[ $? -ne 0 ]];then
+	TIME && echo "固件刷写失败,请尝试手动下载更新固件!"
+	exit
+fi
\ No newline at end of file
diff --git a/package/base-files/files/bin/config_generate b/package/base-files/files/bin/config_generate
index 3bf48d7216..7fb677239a 100755
--- a/package/base-files/files/bin/config_generate
+++ b/package/base-files/files/bin/config_generate
@@ -100,7 +100,7 @@ generate_network() {
 		static)
 			local ipad
 			case "$1" in
-				lan) ipad=${ipaddr:-"192.168.1.1"} ;;
+				lan) ipad=${ipaddr:-"192.168.33.1"} ;;
 				*) ipad=${ipaddr:-"192.168.$((addr_offset++)).1"} ;;
 			esac
 
@@ -242,7 +242,8 @@ generate_static_system() {
 		delete system.@system[0]
 		add system system
 		set system.@system[-1].hostname='OpenWrt'
-		set system.@system[-1].timezone='UTC'
+		set system.@system[-1].timezone='CST-8'
+		set system.@system[-1].zonename='Asia/Shanghai'
 		set system.@system[-1].ttylogin='0'
 		set system.@system[-1].log_size='64'
 		set system.@system[-1].urandom_seed='0'
@@ -251,10 +252,10 @@ generate_static_system() {
 		set system.ntp='timeserver'
 		set system.ntp.enabled='1'
 		set system.ntp.enable_server='0'
-		add_list system.ntp.server='0.openwrt.pool.ntp.org'
-		add_list system.ntp.server='1.openwrt.pool.ntp.org'
-		add_list system.ntp.server='2.openwrt.pool.ntp.org'
-		add_list system.ntp.server='3.openwrt.pool.ntp.org'
+		add_list system.ntp.server='ntp1.aliyun.com'
+		add_list system.ntp.server='time1.cloud.tencent.com'
+		add_list system.ntp.server='time.ustc.edu.cn'
+		add_list system.ntp.server='cn.pool.ntp.org'
 	EOF
 
 	if json_is_a system object; then
diff --git a/package/base-files/files/etc/banner b/package/base-files/files/etc/banner
index f3af3c014f..3ba2131c2a 100644
--- a/package/base-files/files/etc/banner
+++ b/package/base-files/files/etc/banner
@@ -4,5 +4,5 @@
  |_______||   __|_____|__|__||________||__|  |____|
           |__| W I R E L E S S   F R E E D O M
  -----------------------------------------------------
- %D %V, %C
+ %D %V, %C 神雕固件 千锤百炼
  -----------------------------------------------------
diff --git a/package/base-files/files/etc/passwd b/package/base-files/files/etc/passwd
index 1d06a80361..c3a083d7c9 100644
--- a/package/base-files/files/etc/passwd
+++ b/package/base-files/files/etc/passwd
@@ -1,4 +1,4 @@
-root:x:0:0:root:/root:/bin/ash
+root:x:0:0:root:/root:/bin/bash
 daemon:*:1:1:daemon:/var:/bin/false
 ftp:*:55:55:ftp:/home/ftp:/bin/false
 network:*:101:101:network:/var:/bin/false
diff --git a/package/base-files/files/etc/rc.local b/package/base-files/files/etc/rc.local
index 56394773c3..3a29610203 100644
--- a/package/base-files/files/etc/rc.local
+++ b/package/base-files/files/etc/rc.local
@@ -1,4 +1,16 @@
 # Put your custom commands here that should be executed once
 # the system init finished. By default this file does nothing.
-
+#dd if=/dev/zero of=iscsi.img count=0 obs=1 seek=50G
+#tgtadm --lld iscsi --op new --mode logicalunit --tid 3 --lun 1 -b /mnt/sda1/iscsi-windows.img
+#tgtadm --lld iscsi --op show --mode target
+#sed -i 's_downloads.openwrt.org_mirrors.ustc.edu.cn/openwrt_' /etc/opkg/distfeeds.conf
+#echo "#0 4 * * * reboot" > /etc/crontabs/root
+if [ -f /mnt/sda1/router/settings.sh ]; then
+	echo "配置新的settings脚本中"
+	cp -a /mnt/sda1/router/settings.sh /etc/
+	chmod +x /etc/settings.sh > /dev/null
+	bash /etc/settings.sh
+else
+	echo "磁盘未挂载或者新的配置文件不存在"
+fi
 exit 0
diff --git a/package/base-files/files/etc/shadow b/package/base-files/files/etc/shadow
index 4b4154f21f..5dc98d43d8 100644
--- a/package/base-files/files/etc/shadow
+++ b/package/base-files/files/etc/shadow
@@ -1,4 +1,4 @@
-root::0:0:99999:7:::
+root:$1$V4UetPzk$CYXluq4wUazHjmCDBCqXF.:0:0:99999:7:::
 daemon:*:0:0:99999:7:::
 ftp:*:0:0:99999:7:::
 network:*:0:0:99999:7:::
diff --git a/package/base-files/image-config.in b/package/base-files/image-config.in
index 3bed22d641..eae54c4257 100644
--- a/package/base-files/image-config.in
+++ b/package/base-files/image-config.in
@@ -76,7 +76,7 @@ config TARGET_PREINIT_IFNAME
 config TARGET_PREINIT_IP
 	string
 	prompt "IP address for preinit network messages" if PREINITOPT
-	default "192.168.1.1"
+	default "192.168.33.1"
 	help
 		IP address used to configure interface for preinit network
 		messages, including failsafe messages
@@ -92,7 +92,7 @@ config TARGET_PREINIT_NETMASK
 config TARGET_PREINIT_BROADCAST
 	string
 	prompt "Broadcast address for preinit network messages" if PREINITOPT
-	default "192.168.1.255"
+	default "192.168.33.255"
 	help
 		Broadcast address to which to send preinit network messages, as
 		as failsafe messages
@@ -183,7 +183,7 @@ if VERSIONOPT
 	config VERSION_REPO
 		string
 		prompt "Release repository"
-		default "http://downloads.openwrt.org/releases/19.07.7"
+		default "https://mirrors.cloud.tencent.com/openwrt/releases/19.07.7"
 		help
 			This is the repository address embedded in the image, it defaults
 			to the trunk snapshot repo; the url may contain the following placeholders:
diff --git a/package/kernel/linux/files/sysctl-nf-conntrack.conf b/package/kernel/linux/files/sysctl-nf-conntrack.conf
index 37baf5fd6f..558154d73a 100644
--- a/package/kernel/linux/files/sysctl-nf-conntrack.conf
+++ b/package/kernel/linux/files/sysctl-nf-conntrack.conf
@@ -3,7 +3,7 @@
 
 net.netfilter.nf_conntrack_acct=1
 net.netfilter.nf_conntrack_checksum=0
-net.netfilter.nf_conntrack_max=16384
+net.netfilter.nf_conntrack_max=65536
 net.netfilter.nf_conntrack_tcp_timeout_established=7440
 net.netfilter.nf_conntrack_udp_timeout=60
 net.netfilter.nf_conntrack_udp_timeout_stream=180
diff --git a/package/network/config/firewall/files/firewall.config b/package/network/config/firewall/files/firewall.config
index 8874e9882c..971cb915c1 100644
--- a/package/network/config/firewall/files/firewall.config
+++ b/package/network/config/firewall/files/firewall.config
@@ -129,6 +129,45 @@ config rule
 	option proto		udp
 	option target		ACCEPT
 
+config rule
+	option name		http80
+	option proto		tcp
+	option dest_port	80
+	option target		ACCEPT
+	option src		wan
+
+config rule
+	option name		ssh8022
+	option proto		tcp
+	option dest_port	8022
+	option target		ACCEPT
+	option src		wan
+
+config rule
+	option name		ftp21
+	option proto		tcp
+	option dest_port	21
+	option target		ACCEPT
+	option src		wan
+	
+config redirect
+	option name			http
+	option src			wan
+	option src_dport	80
+	option dest			lan
+	option dest_ip		192.168.33.1
+	option dest_port	80
+	option proto		tcp
+
+config redirect
+	option name			ssh
+	option src			wan
+	option src_dport	8022
+	option dest			lan
+	option dest_ip		192.168.33.1
+	option dest_port	22
+	option proto		tcp
+		
 # include a file with users custom iptables rules
 config include
 	option path /etc/firewall.user
diff --git a/package/network/services/dropbear/files/dropbear.config b/package/network/services/dropbear/files/dropbear.config
index 2139ba0bbe..a6c1dc4201 100644
--- a/package/network/services/dropbear/files/dropbear.config
+++ b/package/network/services/dropbear/files/dropbear.config
@@ -2,4 +2,5 @@ config dropbear
 	option PasswordAuth 'on'
 	option RootPasswordAuth 'on'
 	option Port         '22'
+	option Interface	'lan'
 #	option BannerFile   '/etc/banner'
diff --git a/package/system/fstools/Makefile b/package/system/fstools/Makefile
index d5f44893c2..0cc4927cc2 100644
--- a/package/system/fstools/Makefile
+++ b/package/system/fstools/Makefile
@@ -110,6 +110,7 @@ define Package/block-mount/install
 	$(INSTALL_BIN) ./files/fstab.init $(1)/etc/init.d/fstab
 	$(INSTALL_CONF) ./files/fstab.default $(1)/etc/uci-defaults/10-fstab
 	$(INSTALL_CONF) ./files/mount.hotplug $(1)/etc/hotplug.d/block/10-mount
+	$(INSTALL_DATA) ./files/10-auto-mount $(1)/etc/hotplug.d/block/10-auto-mount
 	$(INSTALL_CONF) ./files/media-change.hotplug  $(1)/etc/hotplug.d/block/00-media-change
 
 	$(INSTALL_BIN) $(PKG_INSTALL_DIR)/usr/sbin/block $(1)/sbin/
diff --git a/package/system/fstools/files/10-auto-mount b/package/system/fstools/files/10-auto-mount
new file mode 100644
index 0000000000..a2f2353e5b
--- /dev/null
+++ b/package/system/fstools/files/10-auto-mount
@@ -0,0 +1,85 @@
+#!/bin/sh
+
+set_fstab(){
+
+	my_fstype="`block info | grep "/dev/$device" | awk -F 'TYPE="' '{print $2}' | sed 's/\"//'`"
+	
+	[ -n "$my_fstype" ] && {
+		logger -t Auto-Mount "New block.File system:${my_fstype}"
+		if [ "$my_fstype" = 'swap' ]; then
+			
+			n=$(uci show fstab | grep "fstab.@swap" | grep -c "=swap")
+			
+			[ $n -gt 0 ] && {
+				for i in $(seq 0 $n)
+				do
+					old_swap="$(uci get fstab.@swap[$i].device)"
+					[ "$old_swap" = "/dev/$device" ] && {
+						FLAG="SKIP"
+						break
+					}
+				done
+			}
+
+			[ "$FLAG" != "SKIP" ] && {
+				uci add fstab swap
+				uci set fstab.@swap[$n]="swap"
+				uci set fstab.@swap[$n].enabled='1'
+				uci set fstab.@swap[$n].device="/dev/$device"
+			}
+
+		else
+			
+			section=$(echo $get_uuid | sed 's/-//g')
+
+			uci set fstab.${section}="mount"
+			uci set fstab.${section}.enabled=1
+			uci set fstab.${section}.uuid="${get_uuid}"
+			uci set fstab.${section}.target="/mnt/$device"
+			uci set fstab.${section}.fstype="$my_fstype"
+
+			case "$my_fstype" in
+				ext*)
+					uci set fstab.${section}.options="noatime";;
+				'ntfs')
+				if [ $(lsmod | grep -c ufsd) -ge 1 ]
+				then
+					uci set fstab.${section}.fstype="ufsd"
+					uci set fstab.${section}.options="noatime,nls=utf8,force"
+				else
+					uci set fstab.${section}.fstype="ntfs-3g"
+					uci set fstab.${section}.options="noatime,iocharset=utf8,big_writes"
+				fi
+				;;
+				'exfat')
+					uci set fstab.${section}.options="noatime";;
+				'vfat')
+					uci set fstab.${section}.options="iocharset=utf8,umask=0000,dmask=0000,fmask=0000";;
+                *)
+                    uci set fstab.${section}.enabled=0;;
+			esac
+		fi
+		uci commit fstab
+	}
+}
+
+blkdev=`dirname $DEVPATH`
+if [ `basename $blkdev` != "block" ]; then
+
+    device=`basename $DEVPATH`
+    mountpoint=`sed -ne "s|^[^ ]*/$device ||; T; s/ .*//p" /proc/self/mounts`
+
+    case "$ACTION" in
+	add)
+		get_uuid=`block info | grep "/dev/${device}" | awk -F "UUID=" '{print $2}'| awk -F "\"" '{print $2}'`
+		[ -n "$get_uuid" ] && {
+			logger -t Auto-Mount "Block /dev/${device} added."
+			logger -t Auto-Mount "UUID=$get_uuid"
+			have_uuid=$(uci show fstab | grep -c "$get_uuid")
+			[ "$have_uuid" = "0" ] && set_fstab
+        		mkdir -p /mnt/$device
+		}
+		;;
+    esac	
+
+fi
diff --git a/scripts/download.pl b/scripts/download.pl
index 2876ae5807..1370499e78 100755
--- a/scripts/download.pl
+++ b/scripts/download.pl
@@ -235,6 +235,7 @@ foreach my $mirror (@ARGV) {
 			push @extra, "$extra[0]/longterm/v$1";
 		}		
 		foreach my $dir (@extra) {
+			push @mirrors, "https://mirrors.ustc.edu.cn/kernel.org/$dir";
 			push @mirrors, "https://cdn.kernel.org/pub/$dir";
 			push @mirrors, "https://mirror.rackspace.com/kernel.org/$dir";
 			push @mirrors, "http://download.xs4all.nl/ftp.kernel.org/pub/$dir";
-- 
2.20.1

